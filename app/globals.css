@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

:root {
  /* Updated to vibrant blue gradient color palette */
  --background: oklch(0.02 0.03 240); /* Deep blue navy */
  --foreground: oklch(0.98 0.01 240); /* Crisp white with blue tint */
  --card: oklch(0.05 0.04 240); /* Dark blue card background */
  --card-foreground: oklch(0.95 0.01 240);
  --popover: oklch(0.03 0.03 240);
  --popover-foreground: oklch(0.98 0.01 240);
  --primary: oklch(0.7 0.3 240); /* Vibrant blue primary */
  --primary-foreground: oklch(0.02 0.02 240);
  --secondary: oklch(0.08 0.05 240); /* Blue secondary */
  --secondary-foreground: oklch(0.95 0.01 240);
  --muted: oklch(0.12 0.04 240);
  --muted-foreground: oklch(0.65 0.02 240);
  --accent: oklch(0.8 0.25 200); /* Bright cyan-blue accent */
  --accent-foreground: oklch(0.02 0.02 240);
  --destructive: oklch(0.65 0.25 15); /* Vibrant red */
  --destructive-foreground: oklch(0.98 0.01 240);
  --border: oklch(0.15 0.05 240);
  --input: oklch(0.08 0.04 240);
  --ring: oklch(0.7 0.3 240);
  --chart-1: oklch(0.7 0.3 240);
  --chart-2: oklch(0.8 0.25 200);
  --chart-3: oklch(0.75 0.28 180);
  --chart-4: oklch(0.65 0.22 160);
  --chart-5: oklch(0.85 0.18 60);
  --radius: 1rem;
  --sidebar: oklch(0.05 0.04 240);
  --sidebar-foreground: oklch(0.95 0.01 240);
  --sidebar-primary: oklch(0.7 0.3 240);
  --sidebar-primary-foreground: oklch(0.02 0.02 240);
  --sidebar-accent: oklch(0.08 0.05 240);
  --sidebar-accent-foreground: oklch(0.95 0.01 240);
  --sidebar-border: oklch(0.15 0.05 240);
  --sidebar-ring: oklch(0.7 0.3 240);
}

.dark {
  /* Enhanced dark mode with stronger blue gradients */
  --background: oklch(0.01 0.03 240);
  --foreground: oklch(0.99 0.01 240);
  --card: oklch(0.03 0.04 240);
  --card-foreground: oklch(0.97 0.01 240);
  --popover: oklch(0.01 0.03 240);
  --popover-foreground: oklch(0.99 0.01 240);
  --primary: oklch(0.75 0.32 240);
  --primary-foreground: oklch(0.01 0.02 240);
  --secondary: oklch(0.06 0.05 240);
  --secondary-foreground: oklch(0.97 0.01 240);
  --muted: oklch(0.1 0.04 240);
  --muted-foreground: oklch(0.7 0.02 240);
  --accent: oklch(0.85 0.28 200);
  --accent-foreground: oklch(0.01 0.02 240);
  --destructive: oklch(0.7 0.28 15);
  --destructive-foreground: oklch(0.99 0.01 240);
  --border: oklch(0.12 0.05 240);
  --input: oklch(0.06 0.04 240);
  --ring: oklch(0.75 0.32 240);
}

@theme inline {
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
  --color-sidebar: var(--sidebar);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-ring: var(--sidebar-ring);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* Added advanced animations and 3D effects for modern tech aesthetic */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(60px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-80px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes float {
  0%,
  100% {
    transform: translateY(0px) rotateY(0deg);
  }
  50% {
    transform: translateY(-20px) rotateY(5deg);
  }
}

@keyframes glow {
  0%,
  100% {
    box-shadow: 0 0 20px oklch(0.7 0.3 240 / 0.4);
  }
  50% {
    box-shadow: 0 0 40px oklch(0.7 0.3 240 / 0.7), 0 0 60px oklch(0.8 0.25 200 / 0.4);
  }
}

@keyframes rotate3d {
  from {
    transform: rotateY(0deg) rotateX(0deg);
  }
  to {
    transform: rotateY(360deg) rotateX(15deg);
  }
}

@keyframes textShimmer {
  0% {
    background-position: -200% center;
  }
  100% {
    background-position: 200% center;
  }
}

@keyframes morphing {
  0%,
  100% {
    border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
  }
  50% {
    border-radius: 30% 60% 70% 40% / 50% 60% 30% 60%;
  }
}

@keyframes bounceSubtle {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-8px);
  }
}

@keyframes wiggle {
  0%,
  100% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(-3deg);
  }
  75% {
    transform: rotate(3deg);
  }
}

@keyframes tilt {
  0%,
  100% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(-2deg);
  }
  75% {
    transform: rotate(2deg);
  }
}

@keyframes scaleBounce {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

@keyframes pulseGlow {
  0%,
  100% {
    box-shadow: 0 0 20px oklch(0.7 0.3 240 / 0.4);
    opacity: 1;
  }
  50% {
    box-shadow: 0 0 40px oklch(0.7 0.3 240 / 0.7), 0 0 60px oklch(0.8 0.25 200 / 0.5);
    opacity: 0.9;
  }
}

@keyframes spinSlow {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fade-in-up {
  animation: fadeInUp 1s ease-out forwards;
}

.animate-slide-in-left {
  animation: slideInLeft 1s ease-out forwards;
}

.animate-float {
  animation: float 4s ease-in-out infinite;
}

.animate-glow {
  animation: glow 3s ease-in-out infinite;
}

.animate-rotate-3d {
  animation: rotate3d 20s linear infinite;
}

.animate-text-shimmer {
  background: linear-gradient(90deg, oklch(0.65 0.02 240) 0%, oklch(0.7 0.3 240) 50%, oklch(0.8 0.25 200) 100%);
  background-size: 200% auto;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: textShimmer 3s linear infinite;
}

.animate-morphing {
  animation: morphing 8s ease-in-out infinite;
}

.animate-bounce-subtle {
  animation: bounceSubtle 2s ease-in-out infinite;
}

.animate-wiggle {
  animation: wiggle 2s ease-in-out infinite;
}

.animate-tilt {
  animation: tilt 3s ease-in-out infinite;
}

.animate-scale-bounce {
  animation: scaleBounce 2s ease-in-out infinite;
}

.animate-pulse-glow {
  animation: pulseGlow 3s ease-in-out infinite;
}

.animate-spin-slow {
  animation: spinSlow 8s linear infinite;
}

.animate-fade-in-right {
  animation: fadeInRight 1s ease-out forwards;
}

.animate-slide-up {
  animation: slideUp 0.8s ease-out forwards;
}

/* Added glassmorphism and modern tech effects */
.glass-effect {
  background: oklch(0.05 0.04 240 / 0.8);
  backdrop-filter: blur(20px);
  border: 1px solid oklch(0.15 0.05 240 / 0.3);
}

.tech-grid {
  background-image: linear-gradient(oklch(0.15 0.05 240 / 0.15) 1px, transparent 1px),
    linear-gradient(90deg, oklch(0.15 0.05 240 / 0.15) 1px, transparent 1px);
  background-size: 50px 50px;
}

.gradient-text {
  background: linear-gradient(135deg, oklch(0.7 0.3 240), oklch(0.8 0.25 200), oklch(0.75 0.28 180));
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.neon-border {
  border: 2px solid transparent;
  background: linear-gradient(oklch(0.05 0.04 240), oklch(0.05 0.04 240)) padding-box,
    linear-gradient(135deg, oklch(0.7 0.3 240), oklch(0.8 0.25 200)) border-box;
}

html {
  scroll-behavior: smooth;
}

/* Added perspective for 3D effects */
.perspective {
  perspective: 1000px;
}

.transform-3d {
  transform-style: preserve-3d;
}

/* Added all missing animation keyframes for creative website animations */
@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes bounceGentle {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-4px);
  }
}

@keyframes rotateIn {
  from {
    opacity: 0;
    transform: rotate(-180deg);
  }
  to {
    opacity: 1;
    transform: rotate(0deg);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes shimmer {
  0% {
    background-position: -200% center;
  }
  100% {
    background-position: 200% center;
  }
}

@keyframes pulseGentle {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
}

@keyframes floatSlow {
  0%,
  100% {
    transform: translateY(0px) translateX(0px);
  }
  33% {
    transform: translateY(-15px) translateX(10px);
  }
  66% {
    transform: translateY(5px) translateX(-5px);
  }
}

@keyframes floatReverse {
  0%,
  100% {
    transform: translateY(0px) translateX(0px);
  }
  33% {
    transform: translateY(10px) translateX(-8px);
  }
  66% {
    transform: translateY(-12px) translateX(6px);
  }
}

@keyframes textReveal {
  from {
    opacity: 0;
    transform: translateY(20px);
    filter: blur(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
    filter: blur(0px);
  }
}

@keyframes expandWidth {
  from {
    width: 0;
  }
  to {
    width: 6rem;
  }
}

@keyframes countUp {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes liftFloat {
  0%,
  100% {
    transform: translateY(0) scale(1);
  }
  50% {
    transform: translateY(-8px) scale(1.02);
  }
}

@keyframes rotateSlow {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes glowPulse {
  0%,
  100% {
    box-shadow: 0 0 10px oklch(0.7 0.3 240 / 0.3);
  }
  50% {
    box-shadow: 0 0 20px oklch(0.7 0.3 240 / 0.5), 0 0 30px oklch(0.8 0.25 200 / 0.3);
  }
}

/* Added all missing animation utility classes */
.animate-slide-down {
  animation: slideDown 0.6s ease-out forwards;
}

.animate-bounce-gentle {
  animation: bounceGentle 2s ease-in-out infinite;
}

.animate-rotate-in {
  animation: rotateIn 0.3s ease-out forwards;
}

.animate-fade-in {
  animation: fadeIn 0.8s ease-out forwards;
}

.animate-shimmer {
  background: linear-gradient(90deg, transparent 0%, oklch(0.7 0.3 240 / 0.3) 50%, transparent 100%);
  background-size: 200% auto;
  animation: shimmer 2s linear infinite;
}

.animate-pulse-gentle {
  animation: pulseGentle 3s ease-in-out infinite;
}

.animate-float-slow {
  animation: floatSlow 6s ease-in-out infinite;
}

.animate-float-reverse {
  animation: floatReverse 8s ease-in-out infinite;
}

.animate-text-reveal {
  animation: textReveal 1.2s ease-out forwards;
}

.animate-expand-width {
  animation: expandWidth 1.5s ease-out forwards;
}

.animate-count-up {
  animation: countUp 0.8s ease-out forwards;
}

.animate-lift-float {
  animation: liftFloat 3s ease-in-out infinite;
}

.animate-rotate-slow {
  animation: rotateSlow 15s linear infinite;
}

.animate-glow-pulse {
  animation: glowPulse 2s ease-in-out infinite;
}

/* Adding advanced visual animation effects and motion graphics */
@keyframes particleFloat1 {
  0%,
  100% {
    transform: translate(0, 0) rotate(0deg);
    opacity: 0.3;
  }
  25% {
    transform: translate(100px, -50px) rotate(90deg);
    opacity: 0.7;
  }
  50% {
    transform: translate(-50px, -100px) rotate(180deg);
    opacity: 0.5;
  }
  75% {
    transform: translate(-100px, 50px) rotate(270deg);
    opacity: 0.8;
  }
}

@keyframes particleFloat2 {
  0%,
  100% {
    transform: translate(0, 0) scale(1);
    opacity: 0.4;
  }
  33% {
    transform: translate(-80px, -120px) scale(1.2);
    opacity: 0.8;
  }
  66% {
    transform: translate(120px, -80px) scale(0.8);
    opacity: 0.6;
  }
}

@keyframes particleFloat3 {
  0%,
  100% {
    transform: translate(0, 0) rotate(0deg) scale(1);
    opacity: 0.2;
  }
  50% {
    transform: translate(150px, -200px) rotate(180deg) scale(1.5);
    opacity: 0.9;
  }
}

@keyframes backgroundWave {
  0%,
  100% {
    transform: translateX(0) translateY(0) rotate(0deg);
  }
  25% {
    transform: translateX(50px) translateY(-30px) rotate(5deg);
  }
  50% {
    transform: translateX(-30px) translateY(-60px) rotate(-3deg);
  }
  75% {
    transform: translateX(-50px) translateY(-30px) rotate(7deg);
  }
}

@keyframes morphingBlob {
  0%,
  100% {
    border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
    transform: rotate(0deg) scale(1);
  }
  25% {
    border-radius: 30% 60% 70% 40% / 50% 60% 30% 60%;
    transform: rotate(90deg) scale(1.1);
  }
  50% {
    border-radius: 70% 30% 40% 60% / 40% 70% 60% 30%;
    transform: rotate(180deg) scale(0.9);
  }
  75% {
    border-radius: 40% 70% 60% 30% / 70% 40% 30% 70%;
    transform: rotate(270deg) scale(1.05);
  }
}

@keyframes dataStream {
  0% {
    transform: translateY(100vh) translateX(0);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    transform: translateY(-100px) translateX(50px);
    opacity: 0;
  }
}

@keyframes hologramFlicker {
  0%,
  100% {
    opacity: 1;
    filter: hue-rotate(0deg);
  }
  25% {
    opacity: 0.8;
    filter: hue-rotate(90deg);
  }
  50% {
    opacity: 0.9;
    filter: hue-rotate(180deg);
  }
  75% {
    opacity: 0.7;
    filter: hue-rotate(270deg);
  }
}

@keyframes energyPulse {
  0%,
  100% {
    box-shadow: 0 0 20px oklch(0.7 0.3 240 / 0.4), inset 0 0 20px oklch(0.8 0.25 200 / 0.15);
    transform: scale(1);
  }
  50% {
    box-shadow: 0 0 60px oklch(0.7 0.3 240 / 0.7), 0 0 100px oklch(0.8 0.25 200 / 0.5), inset 0 0 40px
      oklch(0.8 0.25 200 / 0.25);
    transform: scale(1.02);
  }
}

@keyframes matrixRain {
  0% {
    transform: translateY(-100vh);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    transform: translateY(100vh);
    opacity: 0;
  }
}

@keyframes circuitPulse {
  0%,
  100% {
    stroke-dashoffset: 1000;
    opacity: 0.3;
  }
  50% {
    stroke-dashoffset: 0;
    opacity: 1;
  }
}

@keyframes levitate {
  0%,
  100% {
    transform: translateY(0) rotateX(0deg) rotateY(0deg);
    box-shadow: 0 10px 40px oklch(0.05 0.03 240 / 0.3);
  }
  50% {
    transform: translateY(-20px) rotateX(5deg) rotateY(2deg);
    box-shadow: 0 30px 60px oklch(0.05 0.03 240 / 0.5);
  }
}

@keyframes digitalGlitch {
  0%,
  100% {
    transform: translate(0);
    filter: hue-rotate(0deg);
  }
  20% {
    transform: translate(-2px, 2px);
    filter: hue-rotate(90deg);
  }
  40% {
    transform: translate(-2px, -2px);
    filter: hue-rotate(180deg);
  }
  60% {
    transform: translate(2px, 2px);
    filter: hue-rotate(270deg);
  }
  80% {
    transform: translate(2px, -2px);
    filter: hue-rotate(360deg);
  }
}

/* Adding utility classes for dynamic visual effects */
.animate-particle-float-1 {
  animation: particleFloat1 20s ease-in-out infinite;
}

.animate-particle-float-2 {
  animation: particleFloat2 25s ease-in-out infinite;
}

.animate-particle-float-3 {
  animation: particleFloat3 30s ease-in-out infinite;
}

.animate-background-wave {
  animation: backgroundWave 15s ease-in-out infinite;
}

.animate-morphing-blob {
  animation: morphingBlob 12s ease-in-out infinite;
}

.animate-data-stream {
  animation: dataStream 8s linear infinite;
}

.animate-hologram-flicker {
  animation: hologramFlicker 4s ease-in-out infinite;
}

.animate-energy-pulse {
  animation: energyPulse 3s ease-in-out infinite;
}

.animate-matrix-rain {
  animation: matrixRain 10s linear infinite;
}

.animate-circuit-pulse {
  animation: circuitPulse 6s ease-in-out infinite;
}

.animate-levitate {
  animation: levitate 4s ease-in-out infinite;
}

.animate-digital-glitch {
  animation: digitalGlitch 2s ease-in-out infinite;
}

/* Adding staggered animation delays for sequential effects */
.animate-delay-100 {
  animation-delay: 0.1s;
}
.animate-delay-200 {
  animation-delay: 0.2s;
}
.animate-delay-300 {
  animation-delay: 0.3s;
}
.animate-delay-500 {
  animation-delay: 0.5s;
}
.animate-delay-700 {
  animation-delay: 0.7s;
}
.animate-delay-1000 {
  animation-delay: 1s;
}
.animate-delay-1500 {
  animation-delay: 1.5s;
}
.animate-delay-2000 {
  animation-delay: 2s;
}

/* Adding background particle system */
.particle-system {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
  overflow: hidden;
}

.particle {
  position: absolute;
  width: 4px;
  height: 4px;
  background: oklch(0.7 0.3 240 / 0.7);
  border-radius: 50%;
  box-shadow: 0 0 10px oklch(0.7 0.3 240 / 0.9);
}

.particle:nth-child(1) {
  top: 20%;
  left: 10%;
  animation: particleFloat1 15s ease-in-out infinite;
}
.particle:nth-child(2) {
  top: 60%;
  left: 80%;
  animation: particleFloat2 18s ease-in-out infinite;
}
.particle:nth-child(3) {
  top: 40%;
  left: 30%;
  animation: particleFloat3 22s ease-in-out infinite;
}
.particle:nth-child(4) {
  top: 80%;
  left: 60%;
  animation: particleFloat1 20s ease-in-out infinite reverse;
}
.particle:nth-child(5) {
  top: 10%;
  left: 70%;
  animation: particleFloat2 25s ease-in-out infinite;
}
.particle:nth-child(6) {
  top: 70%;
  left: 20%;
  animation: particleFloat3 16s ease-in-out infinite reverse;
}

/* Adding morphing background elements */
.morphing-bg {
  position: absolute;
  background: linear-gradient(135deg, oklch(0.7 0.3 240 / 0.15), oklch(0.8 0.25 200 / 0.15));
  filter: blur(40px);
}

.morphing-bg-1 {
  width: 300px;
  height: 300px;
  top: 10%;
  right: 10%;
  animation: morphingBlob 20s ease-in-out infinite;
}

.morphing-bg-2 {
  width: 200px;
  height: 200px;
  bottom: 20%;
  left: 15%;
  animation: morphingBlob 25s ease-in-out infinite reverse;
}

.morphing-bg-3 {
  width: 400px;
  height: 400px;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  animation: morphingBlob 30s ease-in-out infinite;
  opacity: 0.3;
}

/* Adding SVG-based animations and creative effects inspired by SVGator examples */
@keyframes drawLine {
  0% {
    stroke-dasharray: 1000;
    stroke-dashoffset: 1000;
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  100% {
    stroke-dashoffset: 0;
    opacity: 1;
  }
}

@keyframes drawLineDelayed {
  0% {
    stroke-dasharray: 800;
    stroke-dashoffset: 800;
    opacity: 0;
  }
  20% {
    opacity: 1;
  }
  100% {
    stroke-dashoffset: 0;
    opacity: 1;
  }
}

@keyframes pulseDot {
  0%,
  100% {
    transform: scale(1);
    opacity: 0.6;
  }
  50% {
    transform: scale(1.5);
    opacity: 1;
  }
}

@keyframes pulseDotDelayed {
  0%,
  100% {
    transform: scale(1);
    opacity: 0.4;
  }
  50% {
    transform: scale(2);
    opacity: 0.9;
  }
}

@keyframes morphShape {
  0%,
  100% {
    border-radius: 20%;
    transform: rotate(0deg) scale(1);
  }
  25% {
    border-radius: 60%;
    transform: rotate(90deg) scale(1.1);
  }
  50% {
    border-radius: 40%;
    transform: rotate(180deg) scale(0.9);
  }
  75% {
    border-radius: 80%;
    transform: rotate(270deg) scale(1.05);
  }
}

@keyframes floatGentle {
  0%,
  100% {
    transform: translateY(0px) translateX(0px);
  }
  33% {
    transform: translateY(-10px) translateX(5px);
  }
  66% {
    transform: translateY(5px) translateX(-3px);
  }
}

@keyframes pingSlow {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  75%,
  100% {
    transform: scale(2);
    opacity: 0;
  }
}

@keyframes textRevealSVG {
  0% {
    opacity: 0;
    transform: translateY(30px);
    filter: blur(5px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
    filter: blur(0);
  }
}

@keyframes buttonPulse {
  0%,
  100% {
    box-shadow: 0 0 20px oklch(0.7 0.3 240 / 0.4);
    transform: scale(1);
  }
  50% {
    box-shadow: 0 0 40px oklch(0.7 0.3 240 / 0.7), 0 0 60px oklch(0.8 0.25 200 / 0.4);
    transform: scale(1.02);
  }
}

@keyframes morphCircle {
  0%,
  100% {
    border-radius: 50%;
    transform: rotate(0deg);
  }
  25% {
    border-radius: 30% 70% 70% 30%;
    transform: rotate(90deg);
  }
  50% {
    border-radius: 70% 30% 30% 70%;
    transform: rotate(180deg);
  }
  75% {
    border-radius: 40% 60% 60% 40%;
    transform: rotate(270deg);
  }
}

/* Adding utility classes for SVG-based animations */
.animate-draw-line {
  animation: drawLine 3s ease-out forwards;
}

.animate-draw-line-delayed {
  animation: drawLineDelayed 3s ease-out forwards;
  animation-delay: 1s;
}

.animate-pulse-dot {
  animation: pulseDot 2s ease-in-out infinite;
}

.animate-pulse-dot-delayed {
  animation: pulseDotDelayed 2s ease-in-out infinite;
  animation-delay: 0.5s;
}

.animate-morph-shape {
  animation: morphShape 8s ease-in-out infinite;
}

.animate-float-gentle {
  animation: floatGentle 4s ease-in-out infinite;
}

.animate-ping-slow {
  animation: pingSlow 3s cubic-bezier(0, 0, 0.2, 1) infinite;
}

.animate-text-reveal-svg {
  animation: textRevealSVG 1.2s ease-out forwards;
}

.animate-slide-in-right {
  animation: slideInRight 1s ease-out forwards;
}

.animate-button-pulse {
  animation: buttonPulse 2s ease-in-out infinite;
}

.animate-morph-circle {
  animation: morphCircle 3s ease-in-out infinite;
}

.animate-bounce-gentle-svg {
  animation: bounceGentle 2s ease-in-out infinite;
}

/* Adding all missing SVG animation keyframes for enhanced visual effects */
@keyframes circuitFlow {
  0% {
    stroke-dasharray: 20 10;
    stroke-dashoffset: 0;
  }
  100% {
    stroke-dashoffset: 30;
  }
}

@keyframes blink {
  0%,
  50% {
    opacity: 1;
  }
  51%,
  100% {
    opacity: 0.3;
  }
}

@keyframes rotateShape {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes morphPolygon {
  0%,
  100% {
    transform: scale(1) rotate(0deg);
  }
  25% {
    transform: scale(1.1) rotate(90deg);
  }
  50% {
    transform: scale(0.9) rotate(180deg);
  }
  75% {
    transform: scale(1.05) rotate(270deg);
  }
}

@keyframes dataFlow {
  0% {
    transform: translateX(-100px);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    transform: translateX(100px);
    opacity: 0;
  }
}

@keyframes travelPath {
  0% {
    offset-distance: 0%;
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    offset-distance: 100%;
    opacity: 0;
  }
}

@keyframes travelPathDelayed {
  0% {
    offset-distance: 0%;
    opacity: 0;
  }
  20% {
    opacity: 1;
  }
  80% {
    opacity: 1;
  }
  100% {
    offset-distance: 100%;
    opacity: 0;
  }
}

@keyframes travelPathReverse {
  0% {
    offset-distance: 100%;
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    offset-distance: 0%;
    opacity: 0;
  }
}

@keyframes morphRect {
  0%,
  100% {
    rx: 8;
    transform: scale(1);
  }
  50% {
    rx: 30;
    transform: scale(1.1);
  }
}

@keyframes expandCircle {
  0% {
    r: 20;
    stroke-opacity: 0.3;
  }
  50% {
    r: 35;
    stroke-opacity: 0.8;
  }
  100% {
    r: 20;
    stroke-opacity: 0.3;
  }
}

@keyframes hexagonPulse {
  0%,
  100% {
    fill-opacity: 0.1;
    transform: scale(1);
  }
  50% {
    fill-opacity: 0.3;
    transform: scale(1.05);
  }
}

@keyframes drawHexagon {
  0% {
    stroke-dasharray: 200;
    stroke-dashoffset: 200;
  }
  100% {
    stroke-dashoffset: 0;
  }
}

@keyframes orbit {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes orbitReverse {
  0% {
    transform: rotate(360deg);
  }
  100% {
    transform: rotate(0deg);
  }
}

@keyframes orbitDot {
  0%,
  100% {
    fill-opacity: 0.6;
    transform: scale(1);
  }
  50% {
    fill-opacity: 1;
    transform: scale(1.2);
  }
}

@keyframes orbitDotReverse {
  0%,
  100% {
    fill-opacity: 0.8;
    transform: scale(1);
  }
  50% {
    fill-opacity: 0.4;
    transform: scale(0.8);
  }
}

@keyframes gridFlow {
  0% {
    transform: translateX(0) translateY(0);
  }
  100% {
    transform: translateX(40px) translateY(40px);
  }
}

@keyframes statsFlow {
  0% {
    transform: translateX(-50px);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateX(50px);
    opacity: 0;
  }
}

@keyframes progressBar {
  0% {
    width: 0;
    opacity: 0;
  }
  20% {
    opacity: 1;
  }
  100% {
    width: 200px;
    opacity: 0.8;
  }
}

@keyframes progressBarDelayed {
  0% {
    width: 0;
    opacity: 0;
  }
  30% {
    opacity: 1;
  }
  100% {
    width: 150px;
    opacity: 0.6;
  }
}

@keyframes progressBarReverse {
  0% {
    width: 180px;
    opacity: 0.8;
  }
  50% {
    opacity: 1;
  }
  100% {
    width: 0;
    opacity: 0;
  }
}

@keyframes techFloat {
  0%,
  100% {
    transform: translateY(0) rotate(0deg);
  }
  50% {
    transform: translateY(-15px) rotate(180deg);
  }
}

@keyframes techFloatDelayed {
  0%,
  100% {
    transform: translateY(0) rotate(0deg);
  }
  50% {
    transform: translateY(-20px) rotate(-180deg);
  }
}

@keyframes techPulse {
  0%,
  100% {
    fill-opacity: 0.6;
    transform: scale(1);
  }
  50% {
    fill-opacity: 1;
    transform: scale(1.3);
  }
}

@keyframes techPulseDelayed {
  0%,
  100% {
    fill-opacity: 0.6;
    transform: scale(1);
  }
  50% {
    fill-opacity: 0.9;
    transform: scale(1.5);
  }
}

@keyframes networkPulse {
  0% {
    r: 6;
    fill-opacity: 0.8;
  }
  50% {
    r: 10;
    fill-opacity: 0.4;
  }
  100% {
    r: 6;
    fill-opacity: 0.8;
  }
}

@keyframes connectionFlow {
  0% {
    stroke-dasharray: 20 10;
    stroke-dashoffset: 0;
    stroke-opacity: 0.3;
  }
  50% {
    stroke-opacity: 0.8;
  }
  100% {
    stroke-dashoffset: 30;
    stroke-opacity: 0.3;
  }
}

@keyframes connectionFlowDelayed {
  0% {
    stroke-dasharray: 15 8;
    stroke-dashoffset: 0;
    stroke-opacity: 0.2;
  }
  50% {
    stroke-opacity: 0.7;
  }
  100% {
    stroke-dashoffset: 23;
    stroke-opacity: 0.2;
  }
}

@keyframes connectionFlowReverse {
  0% {
    stroke-dasharray: 25 12;
    stroke-dashoffset: 37;
    stroke-opacity: 0.4;
  }
  50% {
    stroke-opacity: 0.9;
  }
  100% {
    stroke-dashoffset: 0;
    stroke-opacity: 0.4;
  }
}

@keyframes codeBlocks {
  0% {
    transform: translateX(-20px);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateX(20px);
    opacity: 0;
  }
}

@keyframes codeLine {
  0% {
    width: 0;
    opacity: 0;
  }
  20% {
    opacity: 1;
  }
  100% {
    width: 80px;
    opacity: 0.4;
  }
}

@keyframes codeLineDelayed {
  0% {
    width: 0;
    opacity: 0;
  }
  30% {
    opacity: 1;
  }
  100% {
    width: 120px;
    opacity: 0.4;
  }
}

@keyframes codeLineReverse {
  0% {
    width: 60px;
    opacity: 0.4;
  }
  50% {
    opacity: 1;
  }
  100% {
    width: 0;
    opacity: 0;
  }
}

@keyframes codeLineFast {
  0% {
    width: 0;
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  100% {
    width: 100px;
    opacity: 0.4;
  }
}

@keyframes projectFloat {
  0%,
  100% {
    transform: translateY(0) rotate(0deg);
  }
  50% {
    transform: translateY(-12px) rotate(5deg);
  }
}

@keyframes projectFloatDelayed {
  0%,
  100% {
    transform: translateY(0) rotate(0deg);
  }
  50% {
    transform: translateY(-8px) rotate(-3deg);
  }
}

@keyframes diamondSpin {
  0% {
    transform: rotate(0deg) scale(1);
  }
  50% {
    transform: rotate(180deg) scale(1.1);
  }
  100% {
    transform: rotate(360deg) scale(1);
  }
}

@keyframes innerPulse {
  0%,
  100% {
    fill-opacity: 0.3;
    r: 8;
  }
  50% {
    fill-opacity: 0.7;
    r: 12;
  }
}

@keyframes squareMorph {
  0%,
  100% {
    rx: 4;
    transform: rotate(0deg);
  }
  50% {
    rx: 12;
    transform: rotate(45deg);
  }
}

@keyframes crossRotate {
  0% {
    transform: rotate(0deg);
    stroke-opacity: 0.6;
  }
  50% {
    transform: rotate(90deg);
    stroke-opacity: 1;
  }
  100% {
    transform: rotate(180deg);
    stroke-opacity: 0.6;
  }
}

/* Adding utility classes for all new SVG animations */
.animate-circuit-flow {
  animation: circuitFlow 4s linear infinite;
}

.animate-blink {
  animation: blink 1.5s ease-in-out infinite;
}

.animate-rotate-shape {
  animation: rotateShape 8s linear infinite;
}

.animate-morph-polygon {
  animation: morphPolygon 6s ease-in-out infinite;
}

.animate-data-flow {
  animation: dataFlow 3s linear infinite;
}

.animate-travel-path {
  animation: travelPath 4s ease-in-out infinite;
}

.animate-travel-path-delayed {
  animation: travelPathDelayed 4s ease-in-out infinite;
  animation-delay: 1s;
}

.animate-travel-path-reverse {
  animation: travelPathReverse 4s ease-in-out infinite;
  animation-delay: 2s;
}

.animate-morph-rect {
  animation: morphRect 3s ease-in-out infinite;
}

.animate-expand-circle {
  animation: expandCircle 4s ease-in-out infinite;
}

.animate-hexagon-pulse {
  animation: hexagonPulse 3s ease-in-out infinite;
}

.animate-draw-hexagon {
  animation: drawHexagon 2s ease-out forwards;
}

.animate-orbit {
  animation: orbit 10s linear infinite;
}

.animate-orbit-reverse {
  animation: orbitReverse 8s linear infinite;
}

.animate-orbit-dot {
  animation: orbitDot 2s ease-in-out infinite;
}

.animate-orbit-dot-reverse {
  animation: orbitDotReverse 2.5s ease-in-out infinite;
}

.animate-grid-flow {
  animation: gridFlow 8s linear infinite;
}

.animate-stats-flow {
  animation: statsFlow 5s linear infinite;
}

.animate-progress-bar {
  animation: progressBar 3s ease-out infinite;
}

.animate-progress-bar-delayed {
  animation: progressBarDelayed 3s ease-out infinite;
  animation-delay: 0.5s;
}

.animate-progress-bar-reverse {
  animation: progressBarReverse 3s ease-out infinite;
  animation-delay: 1s;
}

.animate-tech-float {
  animation: techFloat 4s ease-in-out infinite;
}

.animate-tech-float-delayed {
  animation: techFloatDelayed 5s ease-in-out infinite;
  animation-delay: 1s;
}

.animate-tech-pulse {
  animation: techPulse 2s ease-in-out infinite;
}

.animate-tech-pulse-delayed {
  animation: techPulseDelayed 2.5s ease-in-out infinite;
  animation-delay: 0.8s;
}

.animate-network-pulse {
  animation: networkPulse 3s ease-in-out infinite;
}

.animate-connection-flow {
  animation: connectionFlow 4s linear infinite;
}

.animate-connection-flow-delayed {
  animation: connectionFlowDelayed 4s linear infinite;
  animation-delay: 1s;
}

.animate-connection-flow-reverse {
  animation: connectionFlowReverse 4s linear infinite;
  animation-delay: 2s;
}

.animate-code-blocks {
  animation: codeBlocks 6s linear infinite;
}

.animate-code-line {
  animation: codeLine 2s ease-out infinite;
}

.animate-code-line-delayed {
  animation: codeLineDelayed 2s ease-out infinite;
  animation-delay: 0.3s;
}

.animate-code-line-reverse {
  animation: codeLineReverse 2s ease-out infinite;
  animation-delay: 0.6s;
}

.animate-code-line-fast {
  animation: codeLineFast 1.5s ease-out infinite;
  animation-delay: 0.9s;
}

.animate-project-float {
  animation: projectFloat 4s ease-in-out infinite;
}

.animate-project-float-delayed {
  animation: projectFloatDelayed 5s ease-in-out infinite;
  animation-delay: 1.5s;
}

.animate-diamond-spin {
  animation: diamondSpin 6s ease-in-out infinite;
}

.animate-inner-pulse {
  animation: innerPulse 2s ease-in-out infinite;
}

.animate-square-morph {
  animation: squareMorph 4s ease-in-out infinite;
}

.animate-cross-rotate {
  animation: crossRotate 3s linear infinite;
}

/* Adding missing animations for the new Skills section */
@keyframes neuralNetwork {
  0%,
  100% {
    opacity: 0.6;
    transform: translateY(0);
  }
  50% {
    opacity: 1;
    transform: translateY(-5px);
  }
}

@keyframes pulseLine {
  0%,
  100% {
    stroke-opacity: 0.3;
    stroke-width: 1;
  }
  50% {
    stroke-opacity: 0.8;
    stroke-width: 2;
  }
}

@keyframes floatRotate {
  0%,
  100% {
    transform: translateY(0) rotate(0deg);
  }
  33% {
    transform: translateY(-15px) rotate(120deg);
  }
  66% {
    transform: translateY(5px) rotate(240deg);
  }
}

@keyframes skillGlow {
  0%,
  100% {
    box-shadow: 0 0 10px currentColor;
    transform: scale(1);
  }
  50% {
    box-shadow: 0 0 20px currentColor, 0 0 30px currentColor;
    transform: scale(1.05);
  }
}

@keyframes drawCircle {
  0% {
    stroke-dasharray: 251.2;
    stroke-dashoffset: 251.2;
  }
  100% {
    stroke-dashoffset: 0;
  }
}

/* Adding utility classes for Skills section animations */
.animate-neural-network {
  animation: neuralNetwork 4s ease-in-out infinite;
}

.animate-pulse-line {
  animation: pulseLine 2s ease-in-out infinite;
}

.animate-float-rotate {
  animation: floatRotate 8s ease-in-out infinite;
}

.animate-skill-glow {
  animation: skillGlow 1.5s ease-in-out infinite;
}

.animate-draw-circle {
  animation: drawCircle 2s ease-out forwards;
}
